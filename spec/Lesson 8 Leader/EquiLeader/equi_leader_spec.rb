require "./lib/Lesson 8 Leader/EquiLeader/equi_leader"

describe 'EquiLeader' do

  describe 'Example Tests' do
    it 'Example: [4,3,4,4,4,2] to 2' do
      expect(equi_leader([4,3,4,4,4,2])).to eq 2
    end
  end

  describe 'Correctness Tests' do
    context 'Single' do
      it 'Single Element: [1000000000] to 0' do
        expect(equi_leader([1000000000])).to eq 0
      end

      it 'Single Element: [-1000000000] to 0' do
        expect(equi_leader([-1000000000])).to eq 0
      end

      it 'Single Element: [0] to 0' do
        expect(equi_leader([0])).to eq 0
      end
    end

    context 'Double' do
      it 'Double Element: [0,0] to 1' do
        expect(equi_leader([0,0])).to eq 1
      end

      it 'Double Element: [1,2] to 0' do
        expect(equi_leader([1,2])).to eq 0
      end

      it 'Double Element: [-1000000000,-1000000000] to 1' do
        expect(equi_leader([-1000000000,-1000000000])).to eq 1
      end
    end

    context 'Simple' do
      it 'Simple Test: [4, 4, 2, 5, 3, 4, 4, 4] to 3' do
        expect(equi_leader([4, 4, 2, 5, 3, 4, 4, 4])).to eq 3
      end

      it 'Simple Test: [1, 2, 3, 4, 5] to 0' do
        expect(equi_leader([1, 2, 3, 4, 5])).to eq 0
      end
    end

    context 'Small_random' do
      it 'Small Random Test With Two Values, Length = ~100' do
        array = [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0,
                0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0,
                1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0,
                1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1,
                0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1]
        expect(equi_leader(array)).to eq 79
      end
    end

    context 'Small' do
      it 'Random + 200 * [MIN_INT] + Random ,Length = ~300' do
        array = [999999475, 999999658, 999999667, 999999142, 999999010, 999999375,
                  999999274, 999999811, 999999691, 999999602, 999999558, 999999661,
                  999999145, 999999440, 999999162, 999999906, 999999058, 999999819,
                  999999074, 999999687, 999999337, 999999405, 999999843, 999999018,
                  999999060, 999999915, 999999509, 999999091, 999999988, 999999947,
                  999999112, 999999423, 999999135, 999999312, 999999622, 999999163,
                  999999697, 999999051, 999999171, 999999816, 999999400, 999999419,
                  999999596, 999999477, 999999384, 999999030, 999999727, 999999968,
                  999999977, 999999664, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
                  -1000000000, -1000000000]
        expect(equi_leader(array)).to eq 99
      end
    end
  end
end
